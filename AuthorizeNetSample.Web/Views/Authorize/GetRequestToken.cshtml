@model AuthorizeNetSample.Web.Models.GetRequestTokenPageViewModel

@{
    ViewBag.Title = "Get Request Token";
}

<div class="container">
    <h2>Get Request Token</h2>
    <hr />
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(x => x.ClientId, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.ClientId, new { @class = "form-control", disabled = "disabled" })
        </div>
        @if (!String.IsNullOrEmpty(Model.RefreshToken)) {
            <div class="form-group">
                @Html.LabelFor(x => x.RefreshToken, new { @class = "control-label" })
                @Html.TextAreaFor(x => x.RefreshToken, new { @class = "form-control", disabled = "disabled", rows = 8 })
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(x => x.RedirectUri, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.RedirectUri, new { @class = "form-control", disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.State, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.State, new { @class = "form-control", disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Scope, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Scope, new { @class = "form-control", disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Sub, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Sub, new { @class = "form-control", disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.OAuthUrl, new { @class = "control-label" })
            @Html.TextAreaFor(x => x.OAuthUrl, new { @class = "form-control", disabled = "disabled" })
            @Html.HiddenFor(x => x.OAuthUrl)
        </div>
        <button id="getRequestToken" class="btn btn-success" data-oauth-url="@Model.OAuthUrl">Get Request Token</button>
        @if (!String.IsNullOrEmpty(Model.RefreshToken)) {
            <button id="refreshTokenButton" class="btn btn-default">Refresh Access Token</button>
        }
        @Html.ActionLink("Next To Access Token", "GetAccessToken", "Authorize", new { clientId = Model.ClientId, clientSecret = Model.ClientSecret }, new { @class = "btn btn-primary next-action" })
    </div>
    <div id="refreshTokenResults"></div>
</div>

@section scripts {
    <script>
        var refreshAccessTokenUrl = "@Url.Action("RefreshAccessToken", "Authorize")/"

        $("#getRequestToken").click(function() {
            window.open($(this).data("oauth-url"));
        });

        $("#refreshTokenButton").click(function() {
            $.ajax({
                url: refreshAccessTokenUrl,
                type: "GET",
                success: function(data) {
                    $("#refreshTokenResults").html(data);
                },
                error: function() {
                    showNotify("Connection error", "danger");
                }
            });
        });
    </script>
}
